webpackHotUpdate("static/development/pages/test.js",{

/***/ "./components/RTCHome.js":
/*!*******************************!*\
  !*** ./components/RTCHome.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/websocketservice */ \"./services/websocketservice.js\");\n\n\n\nvar _this = undefined,\n    _jsxFileName = \"/Users/kapilgahlot/Desktop/code/node/poc/kss/rtc/components/RTCHome.js\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;\n\n\n\nvar setUpSocketEvents = function setUpSocketEvents(setPeers) {\n  _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].on(\"connect\", function () {\n    console.log(\"connected socket id : \", _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].id);\n  });\n  _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].on(\"disconnect\", function () {\n    console.log(\"disconnected socket id : \", _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].id);\n  });\n  _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].on(\"hello\", function (msg) {\n    console.log(\"Hello : \", msg);\n  });\n  _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].on(\"users\", function (users) {\n    console.log(\"users : \", users);\n    var peers = [];\n    Object.keys(users).map(function (key) {\n      peers.push({\n        id: key,\n        name: users[key]\n      });\n    });\n    setPeers(peers);\n  });\n};\n\nvar sendMsg = function sendMsg(userName) {\n  _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].emit(\"hi\", \"\".concat(_services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].id), userName);\n};\n\nvar peerConnection = null;\nvar RTCPeerConnection = null;\nvar RTCSessionDescription = null;\n\nif (true) {\n  RTCPeerConnection = window.RTCPeerConnection;\n  RTCSessionDescription = window.RTCSessionDescription;\n}\n\nvar getAVPermissions = function getAVPermissions() {\n  navigator.getUserMedia({\n    video: true,\n    audio: true\n  }, function (stream) {\n    var localVideo = document.getElementById(\"local-video\");\n\n    if (localVideo) {\n      localVideo.srcObject = stream;\n    }\n  }, function (error) {\n    console.warn(error.message);\n  });\n};\n\nvar setupRTC = function setupRTC() {\n  peerConnection = new RTCPeerConnection({\n    iceServers: [{\n      urls: 'stun:stun.l.google.com:19302'\n    }]\n  });\n  peerConnection.addEventListener('icecandidate', function (e) {\n    return onIceCandidate(peerConnection, e);\n  });\n  peerConnection.addEventListener('iceconnectionstatechange', function (e) {\n    return onIceStateChange(peerConnection, e);\n  });\n\n  peerConnection.ontrack = function (_ref) {\n    var streams = _ref.streams;\n    console.log(\"got steam : \", streams);\n    var remoteVideo = document.getElementById(\"remote-video\");\n\n    if (remoteVideo) {\n      remoteVideo.srcObject = streams[0]; //    const playPromise = remoteVideo.play()\n      //    playPromise.then(() => {console.log(\"video playing\")})\n      //     .catch(err => { console.log(\"err in playing video : \", err)})\n    }\n  };\n};\n\nvar callUser = /*#__PURE__*/function () {\n  var _ref2 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n    var ve1, offer;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // window.localStream1.getTracks().forEach(track => peerConnection.addTrack(track, window.localStream1));\n            //    const initiator = sessionStorage.getItem(\"cobrowse-initiator\")\n            //    console.log(\"initiator : \", initiator)\n            //    if(!initiator) {\n            //      return\n            //    }\n            ve1 = document.querySelector(\".video-chat-container\");\n\n            if (ve1 && ve1.style) {\n              ve1.style.visibility = \"visible\";\n            }\n\n            _context.next = 4;\n            return peerConnection.createOffer({\n              offerToReceiveAudio: 1,\n              offerToReceiveVideo: 1\n            });\n\n          case 4:\n            offer = _context.sent;\n            _context.next = 7;\n            return peerConnection.setLocalDescription(new RTCSessionDescription(offer));\n\n          case 7:\n            sessionStorage.setItem(\"video-initiator\", true);\n            _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].emit({\n              type: \"rtc-vchat-conn-offer\",\n              offer: offer\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function callUser() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar getName = function getName() {\n  return \"name\";\n};\n\nfunction onIceCandidate(_x, _x2) {\n  return _onIceCandidate.apply(this, arguments);\n} // function onAddIceCandidateSuccess(pc) {\n//   console.log(`${getName(pc)} addIceCandidate success`);\n// }\n// function onAddIceCandidateError(pc, error) {\n//   console.log(`${getName(pc)} failed to add ICE Candidate: ${error.toString()}`);\n// }\n\n\nfunction _onIceCandidate() {\n  _onIceCandidate = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(pc, event) {\n    var initiator;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            initiator = sessionStorage.getItem(\"video-initiator\");\n\n            if (event.candidate) {\n              _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].send({\n                type: \"rtc-add-icecandidate\",\n                candidate: event.candidate,\n                initiator: initiator\n              });\n            } // try {\n            //   await (getOtherPc(pc).addIceCandidate(event.candidate));\n            //   onAddIceCandidateSuccess(pc);\n            // } catch (e) {\n            //   onAddIceCandidateError(pc, e);\n            // }\n\n\n            console.log(\"\".concat(getName(pc), \" ICE candidate:\\n\").concat(event.candidate ? event.candidate.candidate : '(null)'));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _onIceCandidate.apply(this, arguments);\n}\n\nfunction onIceStateChange(pc, event) {\n  if (pc) {\n    console.log(\"\".concat(getName(pc), \" ICE state: \").concat(pc.iceConnectionState));\n    console.log('ICE state change event: ', event);\n  }\n}\n\nvar RTCHome = function RTCHome() {\n  _s();\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      peers = _useState[0],\n      setPeers = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(\"\"),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    console.log(\"Rendering\");\n    setUpSocketEvents(setPeers);\n    getAVPermissions();\n    setupRTC();\n  }, []);\n\n  var renderPeers = function renderPeers() {\n    return peers.map(function (peer) {\n      return __jsx(\"p\", {\n        key: peer.id,\n        className: \"border border-blue-200 rounded-md py-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, peer.id, \" --- \", peer.name);\n    });\n  };\n\n  var changeUserName = function changeUserName(e) {\n    var name = e.target.value;\n    setUserName(name);\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"RTC Home\"), __jsx(\"div\", {\n    className: \"jsx-1266945966\" + \" \" + \"my-10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, renderPeers()), __jsx(\"div\", {\n    \"class\": \"my-10 flex flex-row justify-start content-center\",\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"your name\",\n    value: userName,\n    onChange: changeUserName,\n    className: \"jsx-1266945966\" + \" \" + \"w-60 text-sm text-black placeholder-gray-500 border border-blue-200 rounded-md py-2 pl-10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return sendMsg(userName);\n    },\n    className: \"jsx-1266945966\" + \" \" + \"w-20 ml-10 rounded-md bg-green-500 text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, \"Set Name\")), __jsx(\"div\", {\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    onClick: callUser,\n    className: \"jsx-1266945966\" + \" \" + \"w-20 mr-10 rounded-md bg-blue-500 text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, \"Video Call\"), __jsx(\"input\", {\n    type: \"file\",\n    id: \"fileInput\",\n    name: \"files\",\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    disabled: true,\n    id: \"sendFile\",\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, \"Send\"), __jsx(\"div\", {\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    id: \"download\",\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }), __jsx(\"span\", {\n    id: \"status\",\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"jsx-1266945966\" + \" \" + \"video-chat-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-1266945966\" + \" \" + \"video-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, __jsx(\"video\", {\n    autoPlay: true,\n    id: \"remote-video\",\n    className: \"jsx-1266945966\" + \" \" + \"remote-video\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }), __jsx(\"video\", {\n    autoPlay: true,\n    muted: true,\n    id: \"local-video\",\n    className: \"jsx-1266945966\" + \" \" + \"local-video\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }))), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default.a, {\n    id: \"1266945966\",\n    __self: _this\n  }, \".video-chat-container.jsx-1266945966{padding:0 20px;-webkit-flex:1 1;-ms-flex:1 1;flex:1 1;position:relative;margin-left:30px;margin-top:100px;visibility:hidden;}.remote-video.jsx-1266945966{border:1px solid #cddfe7;width:100%;height:100%;box-shadow:0px 3px 6px rgba(0,0,0,0.2);}.local-video.jsx-1266945966{position:absolute;border:1px solid #cddfe7;bottom:20px;right:40px;box-shadow:0px 3px 6px rgba(0,0,0,0.2);border-radius:5px;width:150px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9rYXBpbGdhaGxvdC9EZXNrdG9wL2NvZGUvbm9kZS9wb2Mva3NzL3J0Yy9jb21wb25lbnRzL1JUQ0hvbWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaU13QixBQUVrQixBQVNVLEFBT1AsZUFmVCxHQWdCZ0IsT0FQZCxXQUNDLE9BT0EsS0FOOEIsTUFWeEIsQ0FpQlAsV0FDK0IsTUFqQnpCLGVBVW5CLEVBVG1CLGdCQWlCQyxDQWhCQSxpQkFpQk4sQ0FoQmQsV0FpQkEiLCJmaWxlIjoiL1VzZXJzL2thcGlsZ2FobG90L0Rlc2t0b3AvY29kZS9ub2RlL3BvYy9rc3MvcnRjL2NvbXBvbmVudHMvUlRDSG9tZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCJcblxuaW1wb3J0IHsgc29ja2V0IH0gZnJvbSBcIi4uL3NlcnZpY2VzL3dlYnNvY2tldHNlcnZpY2VcIlxuXG5jb25zdCBzZXRVcFNvY2tldEV2ZW50cyA9IChzZXRQZWVycykgPT4ge1xuICAgIHNvY2tldC5vbihcImNvbm5lY3RcIiwgKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcImNvbm5lY3RlZCBzb2NrZXQgaWQgOiBcIiwgc29ja2V0LmlkKVxuICAgIH0pO1xuICAgIFxuICAgIHNvY2tldC5vbihcImRpc2Nvbm5lY3RcIiwgKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcImRpc2Nvbm5lY3RlZCBzb2NrZXQgaWQgOiBcIiwgc29ja2V0LmlkKVxuICAgIH0pO1xuICAgIFxuICAgIHNvY2tldC5vbihcImhlbGxvXCIsIChtc2cpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJIZWxsbyA6IFwiLCBtc2cpXG4gICAgfSlcbiAgICBcbiAgICBzb2NrZXQub24oXCJ1c2Vyc1wiLCAodXNlcnMpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJ1c2VycyA6IFwiLCB1c2VycylcbiAgICAgICAgY29uc3QgcGVlcnMgPSBbXVxuICAgICAgICBPYmplY3Qua2V5cyh1c2VycykubWFwKGtleSA9PiB7XG4gICAgICAgICAgICBwZWVycy5wdXNoKHtcbiAgICAgICAgICAgICAgICBpZDoga2V5LFxuICAgICAgICAgICAgICAgIG5hbWU6IHVzZXJzW2tleV1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgICAgIHNldFBlZXJzKHBlZXJzKVxuICAgIH0pXG59XG5cbmNvbnN0IHNlbmRNc2cgPSAodXNlck5hbWUpID0+IHtcbiAgICBzb2NrZXQuZW1pdChcImhpXCIsIGAke3NvY2tldC5pZH1gLCB1c2VyTmFtZSlcbn1cblxuXG5sZXQgcGVlckNvbm5lY3Rpb24gPSBudWxsXG5sZXQgUlRDUGVlckNvbm5lY3Rpb24gPSBudWxsXG5sZXQgUlRDU2Vzc2lvbkRlc2NyaXB0aW9uID0gbnVsbFxuaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBSVENQZWVyQ29ubmVjdGlvbiA9IHdpbmRvdy5SVENQZWVyQ29ubmVjdGlvblxuICAgIFJUQ1Nlc3Npb25EZXNjcmlwdGlvbiA9IHdpbmRvdy5SVENTZXNzaW9uRGVzY3JpcHRpb25cbn1cblxuY29uc3QgZ2V0QVZQZXJtaXNzaW9ucyA9ICgpID0+IHtcbiAgICBuYXZpZ2F0b3IuZ2V0VXNlck1lZGlhKFxuICAgICAgICB7IHZpZGVvOiB0cnVlLCBhdWRpbzogdHJ1ZSB9LFxuICAgICAgICBzdHJlYW0gPT4ge1xuICAgICAgICAgIGNvbnN0IGxvY2FsVmlkZW8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvY2FsLXZpZGVvXCIpO1xuICAgICAgICAgIGlmIChsb2NhbFZpZGVvKSB7XG4gICAgICAgICAgICBsb2NhbFZpZGVvLnNyY09iamVjdCA9IHN0cmVhbTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oZXJyb3IubWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICApXG59XG5cbmNvbnN0IHNldHVwUlRDID0gKCkgPT4ge1xuICAgIHBlZXJDb25uZWN0aW9uID0gbmV3IFJUQ1BlZXJDb25uZWN0aW9uKHtcbiAgICAgICAgaWNlU2VydmVyczogW1xuICAgICAgICAgICAge3VybHM6ICdzdHVuOnN0dW4ubC5nb29nbGUuY29tOjE5MzAyJ31cbiAgICAgICAgXVxuICAgIH0pO1xuXG4gICAgcGVlckNvbm5lY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcignaWNlY2FuZGlkYXRlJywgZSA9PiBvbkljZUNhbmRpZGF0ZShwZWVyQ29ubmVjdGlvbiwgZSkpXG4gICAgcGVlckNvbm5lY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcignaWNlY29ubmVjdGlvbnN0YXRlY2hhbmdlJywgZSA9PiBvbkljZVN0YXRlQ2hhbmdlKHBlZXJDb25uZWN0aW9uLCBlKSlcblxuICAgIHBlZXJDb25uZWN0aW9uLm9udHJhY2sgPSBmdW5jdGlvbih7IHN0cmVhbXMgfSkge1xuICAgICAgICBjb25zb2xlLmxvZyhcImdvdCBzdGVhbSA6IFwiLCBzdHJlYW1zKVxuICAgICAgIGNvbnN0IHJlbW90ZVZpZGVvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyZW1vdGUtdmlkZW9cIik7XG4gICAgICAgaWYgKHJlbW90ZVZpZGVvKSB7XG4gICAgICAgICByZW1vdGVWaWRlby5zcmNPYmplY3QgPSBzdHJlYW1zWzBdO1xuICAgICAgLy8gICAgY29uc3QgcGxheVByb21pc2UgPSByZW1vdGVWaWRlby5wbGF5KClcbiAgICAgIC8vICAgIHBsYXlQcm9taXNlLnRoZW4oKCkgPT4ge2NvbnNvbGUubG9nKFwidmlkZW8gcGxheWluZ1wiKX0pXG4gICAgICAvLyAgICAgLmNhdGNoKGVyciA9PiB7IGNvbnNvbGUubG9nKFwiZXJyIGluIHBsYXlpbmcgdmlkZW8gOiBcIiwgZXJyKX0pXG4gICAgICAgfVxuICAgIH1cbn1cblxuY29uc3QgY2FsbFVzZXIgPSBhc3luYyAoKSA9PiB7XG4gICAgLy8gd2luZG93LmxvY2FsU3RyZWFtMS5nZXRUcmFja3MoKS5mb3JFYWNoKHRyYWNrID0+IHBlZXJDb25uZWN0aW9uLmFkZFRyYWNrKHRyYWNrLCB3aW5kb3cubG9jYWxTdHJlYW0xKSk7XG4vLyAgICBjb25zdCBpbml0aWF0b3IgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKFwiY29icm93c2UtaW5pdGlhdG9yXCIpXG4vLyAgICBjb25zb2xlLmxvZyhcImluaXRpYXRvciA6IFwiLCBpbml0aWF0b3IpXG4vLyAgICBpZighaW5pdGlhdG9yKSB7XG4vLyAgICAgIHJldHVyblxuLy8gICAgfVxuICAgbGV0IHZlMSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudmlkZW8tY2hhdC1jb250YWluZXJcIilcbiAgIGlmKHZlMSAmJiB2ZTEuc3R5bGUpIHtcbiAgICB2ZTEuc3R5bGUudmlzaWJpbGl0eSA9IFwidmlzaWJsZVwiXG4gICB9XG4gICBjb25zdCBvZmZlciA9IGF3YWl0IHBlZXJDb25uZWN0aW9uLmNyZWF0ZU9mZmVyKHtcbiAgICBvZmZlclRvUmVjZWl2ZUF1ZGlvOiAxLFxuICAgIG9mZmVyVG9SZWNlaXZlVmlkZW86IDFcbiAgfSk7XG4gICBhd2FpdCBwZWVyQ29ubmVjdGlvbi5zZXRMb2NhbERlc2NyaXB0aW9uKG5ldyBSVENTZXNzaW9uRGVzY3JpcHRpb24ob2ZmZXIpKTtcbiAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oXCJ2aWRlby1pbml0aWF0b3JcIiwgdHJ1ZSlcbiAgIHNvY2tldC5lbWl0KHsgdHlwZTogXCJydGMtdmNoYXQtY29ubi1vZmZlclwiLCBvZmZlciB9KVxufVxuXG5jb25zdCBnZXROYW1lID0gKCkgPT4gXCJuYW1lXCJcblxuYXN5bmMgZnVuY3Rpb24gb25JY2VDYW5kaWRhdGUocGMsIGV2ZW50KSB7XG4gIGNvbnN0IGluaXRpYXRvciA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oXCJ2aWRlby1pbml0aWF0b3JcIilcbiAgaWYoZXZlbnQuY2FuZGlkYXRlKSB7XG4gICAgc29ja2V0LnNlbmQoeyB0eXBlOiBcInJ0Yy1hZGQtaWNlY2FuZGlkYXRlXCIsIGNhbmRpZGF0ZTogZXZlbnQuY2FuZGlkYXRlLCBpbml0aWF0b3IgfSlcbiAgfVxuICAvLyB0cnkge1xuICAvLyAgIGF3YWl0IChnZXRPdGhlclBjKHBjKS5hZGRJY2VDYW5kaWRhdGUoZXZlbnQuY2FuZGlkYXRlKSk7XG4gIC8vICAgb25BZGRJY2VDYW5kaWRhdGVTdWNjZXNzKHBjKTtcbiAgLy8gfSBjYXRjaCAoZSkge1xuICAvLyAgIG9uQWRkSWNlQ2FuZGlkYXRlRXJyb3IocGMsIGUpO1xuICAvLyB9XG4gIGNvbnNvbGUubG9nKGAke2dldE5hbWUocGMpfSBJQ0UgY2FuZGlkYXRlOlxcbiR7ZXZlbnQuY2FuZGlkYXRlID8gZXZlbnQuY2FuZGlkYXRlLmNhbmRpZGF0ZSA6ICcobnVsbCknfWApO1xufVxuXG4vLyBmdW5jdGlvbiBvbkFkZEljZUNhbmRpZGF0ZVN1Y2Nlc3MocGMpIHtcbi8vICAgY29uc29sZS5sb2coYCR7Z2V0TmFtZShwYyl9IGFkZEljZUNhbmRpZGF0ZSBzdWNjZXNzYCk7XG4vLyB9XG5cbi8vIGZ1bmN0aW9uIG9uQWRkSWNlQ2FuZGlkYXRlRXJyb3IocGMsIGVycm9yKSB7XG4vLyAgIGNvbnNvbGUubG9nKGAke2dldE5hbWUocGMpfSBmYWlsZWQgdG8gYWRkIElDRSBDYW5kaWRhdGU6ICR7ZXJyb3IudG9TdHJpbmcoKX1gKTtcbi8vIH1cblxuZnVuY3Rpb24gb25JY2VTdGF0ZUNoYW5nZShwYywgZXZlbnQpIHtcbiAgaWYgKHBjKSB7XG4gICAgY29uc29sZS5sb2coYCR7Z2V0TmFtZShwYyl9IElDRSBzdGF0ZTogJHtwYy5pY2VDb25uZWN0aW9uU3RhdGV9YCk7XG4gICAgY29uc29sZS5sb2coJ0lDRSBzdGF0ZSBjaGFuZ2UgZXZlbnQ6ICcsIGV2ZW50KTtcbiAgfVxufVxuXG5cbmNvbnN0IFJUQ0hvbWUgPSAoKSA9PiB7XG4gICAgY29uc3QgW3BlZXJzLCBzZXRQZWVyc10gPSB1c2VTdGF0ZShbXSlcbiAgICBjb25zdCBbdXNlck5hbWUsIHNldFVzZXJOYW1lXSA9IHVzZVN0YXRlKFwiXCIpXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJSZW5kZXJpbmdcIilcbiAgICAgICAgc2V0VXBTb2NrZXRFdmVudHMoc2V0UGVlcnMpXG4gICAgICAgIGdldEFWUGVybWlzc2lvbnMoKVxuICAgICAgICBzZXR1cFJUQygpXG4gICAgfSwgW10pXG5cbiAgICBjb25zdCByZW5kZXJQZWVycyA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuKFxuICAgICAgICAgICAgcGVlcnMubWFwKHBlZXIgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgIDxwIGtleT17cGVlci5pZH0gY2xhc3NOYW1lPVwiYm9yZGVyIGJvcmRlci1ibHVlLTIwMCByb3VuZGVkLW1kIHB5LTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtwZWVyLmlkfSAtLS0ge3BlZXIubmFtZX1cbiAgICAgICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH0pXG4gICAgICAgIClcbiAgICB9XG5cbiAgICBjb25zdCBjaGFuZ2VVc2VyTmFtZSA9IChlKSA9PiB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBlLnRhcmdldC52YWx1ZVxuICAgICAgICBzZXRVc2VyTmFtZShuYW1lKVxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8cD5SVEMgSG9tZTwvcD5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXktMTBcIj5cbiAgICAgICAgICAgICB7cmVuZGVyUGVlcnMoKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm15LTEwIGZsZXggZmxleC1yb3cganVzdGlmeS1zdGFydCBjb250ZW50LWNlbnRlclwiPlxuICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInctNjAgdGV4dC1zbSB0ZXh0LWJsYWNrIHBsYWNlaG9sZGVyLWdyYXktNTAwIGJvcmRlciBib3JkZXItYmx1ZS0yMDAgcm91bmRlZC1tZCBweS0yIHBsLTEwXCJcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJ5b3VyIG5hbWVcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dXNlck5hbWV9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtjaGFuZ2VVc2VyTmFtZX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwidy0yMCBtbC0xMCByb3VuZGVkLW1kIGJnLWdyZWVuLTUwMCB0ZXh0LXdoaXRlXCJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2VuZE1zZyh1c2VyTmFtZSl9PlNldCBOYW1lPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBcbiAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidy0yMCBtci0xMCByb3VuZGVkLW1kIGJnLWJsdWUtNTAwIHRleHQtd2hpdGVcIlxuICAgICAgICAgICAgICAgICBvbkNsaWNrPXtjYWxsVXNlcn0+VmlkZW8gQ2FsbDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiZmlsZVwiIGlkPVwiZmlsZUlucHV0XCIgbmFtZT1cImZpbGVzXCIgLz5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGRpc2FibGVkIGlkPVwic2VuZEZpbGVcIj5TZW5kPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPGEgaWQ9XCJkb3dubG9hZFwiPjwvYT5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9XCJzdGF0dXNcIj48L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidmlkZW8tY2hhdC1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInZpZGVvLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgICAgICA8dmlkZW8gYXV0b1BsYXkgY2xhc3NOYW1lPVwicmVtb3RlLXZpZGVvXCIgaWQ9XCJyZW1vdGUtdmlkZW9cIj48L3ZpZGVvPlxuICAgICAgICAgICAgICAgICAgICA8dmlkZW8gYXV0b1BsYXkgbXV0ZWQgY2xhc3NOYW1lPVwibG9jYWwtdmlkZW9cIiBpZD1cImxvY2FsLXZpZGVvXCI+PC92aWRlbz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgIC52aWRlby1jaGF0LWNvbnRhaW5lciB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDAgMjBweDtcbiAgICAgICAgICAgICAgICAgICAgZmxleDogMTtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMzBweDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnJlbW90ZS12aWRlbyB7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjZGRmZTc7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5sb2NhbC12aWRlbyB7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2NkZGZlNztcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAyMHB4O1xuICAgICAgICAgICAgICAgICAgICByaWdodDogNDBweDtcbiAgICAgICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMHB4IDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxNTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgUlRDSG9tZSJdfQ== */\\n/*@ sourceURL=/Users/kapilgahlot/Desktop/code/node/poc/kss/rtc/components/RTCHome.js */\"));\n};\n\n_s(RTCHome, \"52+wPN7oTHCRf+vvmH3lML/knTQ=\");\n\n_c = RTCHome;\n/* harmony default export */ __webpack_exports__[\"default\"] = (RTCHome);\n\nvar _c;\n\n$RefreshReg$(_c, \"RTCHome\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/RTCHome.js\n");

/***/ })

})