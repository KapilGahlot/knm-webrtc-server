webpackHotUpdate("static/development/pages/test.js",{

/***/ "./components/RTCHome.js":
/*!*******************************!*\
  !*** ./components/RTCHome.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/websocketservice */ \"./services/websocketservice.js\");\n\n\n\nvar _this = undefined,\n    _jsxFileName = \"/Users/kapilgahlot/Desktop/code/node/poc/kss/rtc/components/RTCHome.js\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;\n\n\n\nvar setUpSocketEvents = function setUpSocketEvents(setPeers) {\n  _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].on(\"connect\", function () {\n    console.log(\"connected socket id : \", _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].id);\n  });\n  _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].on(\"disconnect\", function () {\n    console.log(\"disconnected socket id : \", _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].id);\n  });\n  _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].on(\"hello\", function (msg) {\n    console.log(\"Hello : \", msg);\n  });\n  _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].on(\"users\", function (users) {\n    console.log(\"users : \", users);\n    var peers = [];\n    Object.keys(users).map(function (key) {\n      peers.push({\n        id: key,\n        name: users[key]\n      });\n    });\n    setPeers(peers);\n  });\n  _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].on(\"rtc-vchat-offer\", /*#__PURE__*/function () {\n    var _ref = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(senderId, offer) {\n      var ve1, answer;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"rtc-vchat-offer : \", senderId, offer);\n              ve1 = document.querySelector(\".video-chat-container\");\n\n              if (ve1 && ve1.style) {\n                ve1.style.visibility = \"visible\";\n              }\n\n              fileInput.disabled = true;\n              sendFile.disabled = true;\n              sessionStorage.setItem(\"video-receiver\", true);\n              sessionStorage.setItem(\"peerId\", peer.id);\n              _context.next = 9;\n              return peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n\n            case 9:\n              _context.next = 11;\n              return peerConnection.createAnswer();\n\n            case 11:\n              answer = _context.sent;\n              _context.next = 14;\n              return peerConnection.setLocalDescription(new RTCSessionDescription(answer));\n\n            case 14:\n              _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].emit(\"rtc-vchat-conn-answer\", _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].id, senderId, answer);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].on(\"rtc-vchat-answer\", /*#__PURE__*/function () {\n    var _ref2 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(receiverId, answer) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"rtc-vchat-answer : \", receiverId, answer);\n              _context2.next = 3;\n              return peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\n\n            case 3:\n              if (!window.isAlreadyCalling) {\n                callUser(receiverId);\n                window.isAlreadyCalling = true;\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n  _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].on(\"rtc-ice-candidate\", function (candidate) {\n    console.log(\"rtc-ice-candidate : \", candidate);\n    peerConnection.addIceCandidate(candidate).then(function (res) {\n      console.log(\"initiator add icecandidate success: \", res);\n    })[\"catch\"](function (err) {\n      console.log(\"initiator add icecandidate error : \", err);\n    });\n  });\n  _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].on(\"rtc-sending-file\", function (sentFileSize, sentFileName) {\n    console.log(\"sentFileSize : \", sentFileSize);\n    console.log(\"sentFileName : \", sentFileName);\n  });\n};\n\nvar sendMsg = function sendMsg(userName) {\n  _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].emit(\"hi\", \"\".concat(_services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].id), userName);\n};\n\nvar peerConnection = null;\nvar RTCPeerConnection = null;\nvar RTCSessionDescription = null;\nvar receiveBuffer = [];\nvar receivedSize = 0;\nvar bytesPrev = 0;\nvar timestampPrev = 0;\nvar timestampStart;\nvar statsInterval = null;\nvar bitrateMax = 0;\nvar sentFileName = \"\";\nvar sentFileSize = 0;\nvar receiveChannel;\n\nif (true) {\n  RTCPeerConnection = window.RTCPeerConnection;\n  RTCSessionDescription = window.RTCSessionDescription;\n}\n\nvar getAVPermissions = function getAVPermissions() {\n  navigator.getUserMedia({\n    video: true,\n    audio: true\n  }, function (stream) {\n    var localVideo = document.getElementById(\"local-video\");\n\n    if (localVideo) {\n      localVideo.srcObject = stream;\n    }\n\n    stream.getTracks().forEach(function (track) {\n      return peerConnection.addTrack(track, stream);\n    });\n  }, function (error) {\n    console.warn(error.message);\n  });\n};\n\nvar setupRTC = function setupRTC() {\n  peerConnection = new RTCPeerConnection({\n    iceServers: [{\n      urls: 'stun:stun.l.google.com:19302'\n    }]\n  });\n  peerConnection.addEventListener('icecandidate', function (e) {\n    return onIceCandidate(peerConnection, e);\n  });\n  peerConnection.addEventListener('iceconnectionstatechange', function (e) {\n    return onIceStateChange(peerConnection, e);\n  });\n\n  peerConnection.ontrack = function (_ref3) {\n    var streams = _ref3.streams;\n    console.log(\"got steam : \", streams);\n    var remoteVideo = document.getElementById(\"remote-video\");\n\n    if (remoteVideo) {\n      remoteVideo.srcObject = streams[0];\n    }\n  };\n};\n\nvar callUser = /*#__PURE__*/function () {\n  var _ref4 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(peerId) {\n    var ve1, offer;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(\"calling peer : \", peerId);\n            ve1 = document.querySelector(\".video-chat-container\");\n\n            if (ve1 && ve1.style) {\n              if (ve1.style.visibility !== \"visible\") {\n                window.sendChannel = peerConnection.createDataChannel('sendDataChannel');\n                sendChannel.binaryType = 'arraybuffer';\n                console.log('Created send data channel');\n                sendChannel.addEventListener('open', onSendChannelStateChange);\n                sendChannel.addEventListener('close', onSendChannelStateChange);\n                sendChannel.addEventListener('error', function (error) {\n                  return console.error('Error in sendChannel:', error);\n                });\n              }\n\n              ve1.style.visibility = \"visible\";\n            }\n\n            _context3.next = 5;\n            return peerConnection.createOffer({\n              offerToReceiveAudio: 1,\n              offerToReceiveVideo: 1\n            });\n\n          case 5:\n            offer = _context3.sent;\n            console.log(\"offer : \", offer);\n            _context3.next = 9;\n            return peerConnection.setLocalDescription(new RTCSessionDescription(offer));\n\n          case 9:\n            sessionStorage.setItem(\"video-initiator\", true);\n            _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].emit(\"rtc-vchat-conn-offer\", _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].id, peerId, offer);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function callUser(_x5) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar getName = function getName() {\n  return \"name\";\n};\n\nfunction onIceCandidate(_x6, _x7) {\n  return _onIceCandidate.apply(this, arguments);\n}\n\nfunction _onIceCandidate() {\n  _onIceCandidate = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(pc, event) {\n    var peerId;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            peerId = sessionStorage.getItem(\"peerId\");\n\n            if (event.candidate) {\n              _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].emit(\"rtc-add-icecandidate\", event.candidate, peerId);\n            }\n\n            console.log(\"\".concat(getName(pc), \" ICE candidate:\\n\").concat(event.candidate ? event.candidate.candidate : '(null)'));\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _onIceCandidate.apply(this, arguments);\n}\n\nfunction onIceStateChange(pc, event) {\n  if (pc) {\n    console.log(\"\".concat(getName(pc), \" ICE state: \").concat(pc.iceConnectionState));\n    console.log('ICE state change event: ', event);\n  }\n}\n\nvar RTCHome = function RTCHome() {\n  _s();\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      peers = _useState[0],\n      setPeers = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(\"\"),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    console.log(\"Rendering\");\n    setUpSocketEvents(setPeers);\n    getAVPermissions();\n    setupRTC();\n  }, []);\n\n  var renderPeers = function renderPeers() {\n    return peers.map(function (peer) {\n      return __jsx(\"div\", {\n        key: peer.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }\n      }, __jsx(\"span\", {\n        className: \"w-1/2 bg-gray-200 border border-double border-red-200 rounded-md py-2 my-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      }, peer.id, \" --- \", peer.name), __jsx(\"button\", {\n        className: \"w-20 mr-10 rounded-md bg-blue-500 text-white\",\n        onClick: function onClick() {\n          callUser(peer.id);\n          sessionStorage.setItem(\"peerId\", peer.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, \"Video Call\"));\n    });\n  };\n\n  var changeUserName = function changeUserName(e) {\n    var name = e.target.value;\n    setUserName(name);\n  };\n\n  var handleFileInputChange = function handleFileInputChange(e) {\n    var file = e.target.files[0];\n\n    if (!file) {\n      console.log('No file chosen');\n    } else {\n      sendFileButton.disabled = false;\n      var peerId = sessionStorage.getItem(\"peerId\");\n      _services_websocketservice__WEBPACK_IMPORTED_MODULE_4__[\"socket\"].emit(\"send-file-size\", peerId, file.size, file.name);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, \"RTC Home\"), __jsx(\"div\", {\n    className: \"jsx-1266945966\" + \" \" + \"my-10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, renderPeers()), __jsx(\"div\", {\n    className: \"jsx-1266945966\" + \" \" + \"my-10 flex flex-row justify-start content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"your name\",\n    value: userName,\n    onChange: changeUserName,\n    className: \"jsx-1266945966\" + \" \" + \"w-60 text-sm text-black placeholder-gray-500 border border-blue-200 rounded-md py-2 pl-10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      sendMsg(userName);\n      setUserName(\"\");\n    },\n    className: \"jsx-1266945966\" + \" \" + \"w-20 ml-10 rounded-md bg-green-500 text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"Set Name\")), __jsx(\"div\", {\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    id: \"fileInput\",\n    name: \"files\",\n    onChange: handleFileInputChange,\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    disabled: true,\n    id: \"sendFile\",\n    className: \"jsx-1266945966\" + \" \" + \"w-20 mr-10 rounded-md bg-blue-500 text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, \"Send\"), __jsx(\"div\", {\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    id: \"download\",\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }), __jsx(\"span\", {\n    id: \"status\",\n    className: \"jsx-1266945966\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"jsx-1266945966\" + \" \" + \"video-chat-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-1266945966\" + \" \" + \"video-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, __jsx(\"video\", {\n    autoPlay: true,\n    id: \"remote-video\",\n    className: \"jsx-1266945966\" + \" \" + \"remote-video\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }), __jsx(\"video\", {\n    autoPlay: true,\n    muted: true,\n    id: \"local-video\",\n    className: \"jsx-1266945966\" + \" \" + \"local-video\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }))), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default.a, {\n    id: \"1266945966\",\n    __self: _this\n  }, \".video-chat-container.jsx-1266945966{padding:0 20px;-webkit-flex:1 1;-ms-flex:1 1;flex:1 1;position:relative;margin-left:30px;margin-top:100px;visibility:hidden;}.remote-video.jsx-1266945966{border:1px solid #cddfe7;width:100%;height:100%;box-shadow:0px 3px 6px rgba(0,0,0,0.2);}.local-video.jsx-1266945966{position:absolute;border:1px solid #cddfe7;bottom:20px;right:40px;box-shadow:0px 3px 6px rgba(0,0,0,0.2);border-radius:5px;width:150px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/kapilgahlot/Desktop/code/node/poc/kss/rtc/components/RTCHome.js */\"));\n};\n\n_s(RTCHome, \"52+wPN7oTHCRf+vvmH3lML/knTQ=\");\n\n_c = RTCHome;\n/* harmony default export */ __webpack_exports__[\"default\"] = (RTCHome);\n\nvar _c;\n\n$RefreshReg$(_c, \"RTCHome\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/RTCHome.js\n");

/***/ })

})